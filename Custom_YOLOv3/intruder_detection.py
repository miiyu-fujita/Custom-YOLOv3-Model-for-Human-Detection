# -*- coding: utf-8 -*-
"""Intruder_Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lI4m6zfOVLy5KAwvcpfMMynZA1p9SFBE

Deliverable 2
"""

#clone darknet
!git clone https://github.com/AlexeyAB/darknet

# Commented out IPython magic to ensure Python compatibility.
#change makefile settings
# %cd darknet
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile

#CUDA?
!/usr/local/cuda/bin/nvcc --version

#build darknet
!make

# Commented out IPython magic to ensure Python compatibility.
#helper functions
def imShow(path):
  '''
  allows predictions to show in google colab environment
  '''
  import cv2
  import matplotlib.pyplot as plt
#   %matplotlib inline

  image = cv2.imread(path)
  height, width = image.shape[:2]
  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

  fig = plt.gcf()
  fig.set_size_inches(18, 10)
  plt.axis("off")
  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
  plt.show()

"""Move custom dataset (already prepared previously) into cloud """

#allow access to google drive files
from google.colab import drive
drive.mount('/content/gdrive')

# this creates a symbolic link so that now the path /content/gdrive/My\ Drive/ is equal to /mydrive
!ln -s /content/gdrive/My\ Drive/ /mydrive
!ls /mydrive

!ls /mydrive/yolov3

# copy the .zip file into the root directory of cloud VM
!cp /mydrive/yolov3/obj.zip ../

# unzip the zip file and its contents should now be in /darknet/data/obj
!unzip ../obj.zip -d data/

"""Configure training set files for training (.cfg)"""

# download cfg to google drive and change its name
!cp cfg/yolov3.cfg /mydrive/yolov3/yolov3_custom2.cfg

# upload the custom .cfg back to cloud VM from Google Drive
!cp /mydrive/yolov3/yolov3_custom.cfg ./cfg

# upload the obj.names and obj.data files to cloud VM from Google Drive
!cp /mydrive/yolov3/obj.names ./data
!cp /mydrive/yolov3/obj.data  ./data

"""Generate train.txt (use a script uploaded to github for this)"""

# upload the generate_train.py script to cloud VM from Google Drive
!cp /content/gdrive/MyDrive/yolov3/generate_train.py ./

#run python script to generate train.txt
!python generate_train.py

!ls data/

"""Download pre-trained weights (yolov3)"""

# upload pretrained convolutional layer weights
!wget http://pjreddie.com/media/files/darknet53.conv.74

"""Training stage!"""

!ls /mydrive/yolov3

#train custom object detector
!./darknet detector train data/obj.data cfg/yolov3_custom.cfg darknet53.conv.74 -dont_show

#if VM kicks user out, pick off training from previously saved weights 

!./darknet detector train data/obj.data cfg/yolov3_custom.cfg /mydrive/yolov3/backup/yolov3_custom_last.weights -dont_show

#accuracy?

!./darknet detector map data/obj.data cfg/yolov3_custom.cfg /mydrive/yolov3/backup/yolov3_custom_last.weights

"""TEST FUNCTIONALITY"""

# Commented out IPython magic to ensure Python compatibility.
#set custom cfg to test mode 

# %cd cfg
!sed -i 's/batch=64/batch=1/' yolov3_custom.cfg
!sed -i 's/subdivisions=16/subdivisions=1/' yolov3_custom.cfg
# %cd ..

# run your custom detector with this command (upload an image to your google drive to test, thresh flag sets accuracy that detection must be in order to show it)
!./darknet detector test data/obj.data cfg/yolov3_custom.cfg /mydrive/yolov3/backup/yolov3_custom_last.weights /mydrive/yolov3/examples/cooking.jpg

# Commented out IPython magic to ensure Python compatibility.
#show predictions on image 
import cv2
import matplotlib.pyplot as plt
# %matplotlib inline

image = cv2.imread('predictions.jpg')
height, width = image.shape[:2]
resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

fig = plt.gcf()
fig.set_size_inches(18,10)
plt.axis("off")
plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
plt.show()

"""Code comes from theAIGuy's tutorial for training a custom yolov3 object detector, original code found here:

https://github.com/theAIGuysCode/YOLOv3-Cloud-Tutorial.git
"""